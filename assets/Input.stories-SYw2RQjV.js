import{p as I,i as C,f as x,a as c,b as w,t as y,s as a,c as R,d as q,e as V,g as B,n as E,h as D}from"./props-Bb_j5XQI.js";import"./ErrorMessage-ykSrzvqt.js";import"./Button-CWJj3Set.js";import{I as m}from"./Table-CF3qO_GN.js";import"./LinearProgress-jTQX4Hrd.js";import"./Spinner-DALpr5zI.js";import"./EmptyScreen-CY4nVbDs.js";import"./fa-layers-text.svelte_svelte_type_style_lang-dqnWQoTM.js";import{d as T,c as S,s as j}from"./create-runtime-stories-DN1QDEVr.js";import"./class-CH0gXcNT.js";import"./index-client-BDWaxr-E.js";import"./index-D45Brjt-.js";import"./StarIcon-CgNVTTUq.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-BMJuGjCE.js";import"./index-D-8MO0q_.js";import"./index-DxKRhftL.js";const{Story:e,meta:k}=T({component:m,title:"Input/Input",tags:["autodocs"],argTypes:{placeholder:{control:"text",description:"placeholder text to show if input field is empty",defaultValue:""},value:{control:"text",description:"initial value",defaultValue:""},disabled:{control:"boolean",description:"Flag the input as being disabled",defaultValue:!1},readonly:{control:"boolean",description:"if true, the input field cannot be edited",defaultValue:!1},required:{control:"boolean",description:"if true, the input field is required",defaultValue:!1},clearable:{control:"boolean",description:"if true, the input field can be cleared with an icon",defaultValue:!1},error:{control:"text",description:"error message to show if input is invalid",defaultValue:""}},parameters:{docs:{description:{component:"These are the stories for the `Input` component.\nIt's the component used to get text/input from the user."}}}});var F=y("<!> <!> <!> <!> <!> <!>",1);function f(_,h){I(h,!1),j((g,r,O=E)=>{let p=()=>D(r==null?void 0:r(),["_children"]);m(g,R(p,{children:(v,P)=>{var u=q();V(()=>B(u,p().content)),c(v,u)},$$slots:{default:!0}}))}),C();var o=F(),s=x(o);e(s,{name:"Basic",args:{placeholder:"Basic input with a default value",value:"Value predefined"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}});var n=a(s,2);e(n,{name:"Readonly",args:{readonly:!0,placeholder:"readonly cannot edit the input field"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}});var i=a(n,2);e(i,{name:"Required",args:{required:!0,placeholder:"example of required field"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}});var l=a(i,2);e(l,{name:"Clearable",args:{clearable:!0,placeholder:"the input field can be cleared with an icon"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}});var d=a(l,2);e(d,{name:"Disabled",args:{disabled:!0,placeholder:"the input field is disabled"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}});var b=a(d,2);e(b,{name:"Error",args:{placeholder:"Input has an error",error:"this input is being invalid"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}}),c(_,o),w()}f.__docgen={keywords:[],data:[],name:"Input.stories.svelte"};const t=S(f,k),ae=["Basic","Readonly","Required","Clearable","Disabled","Error"],re=t.Basic,oe=t.Readonly,se=t.Required,ne=t.Clearable,ie=t.Disabled,le=t.Error;export{re as Basic,ne as Clearable,ie as Disabled,le as Error,oe as Readonly,se as Required,ae as __namedExportsOrder,k as default};
