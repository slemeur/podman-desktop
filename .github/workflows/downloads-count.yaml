# Launch bot
name: Downloads Count

on:
  workflow_dispatch:

env:
  MAC_DOWNLOADS: 0
  WINDOWS_DOWNLOADS: 0
  LINUX_DOWNLOADS: 0
  ALL_DOWNLOADS: 0

jobs:
  get-all-releases-count:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const resp = await github.paginate('GET /repos/{owner}/{repo}/releases{?per_page,page}', {
                owner: 'containers',
                repo: 'podman-desktop',
                per_page: 100
            }, (response) => response.data.map(({ tag_name, assets }) => ({ tag_name, assets })));

            const releases = resp;

            // Create a new json array which keeps tag_name and assets from result
            //const releases = resp.data.map(({ tag_name, assets }) => ({ tag_name, assets }))

            // Keep only tag_name and asset.name and asset.download_count from releases
            releases.forEach((release) => { release.assets = release.assets.map(({ name, download_count }) => ({ name, download_count })) })

            let totalMac = 0;
            let totalWin = 0;
            let totalLinux = 0;

            // count the total number of downloads for each release for mac,windows,linux assests
            releases.forEach((release) => { 
                release.assets = release.assets.filter((asset) => { 
                    if (asset.name.endsWith(".dmg") || (asset.name.endsWith("arm64.zip") || asset.name.endsWith("x64.zip") || asset.name.endsWith("universal.zip")) ){
                        totalMac += asset.download_count;
                    } else if (asset.name.endsWith(".exe")){
                        totalWin += asset.download_count;
                    } else if (asset.name.endsWith(".tar.gz") || asset.name.endsWith(".flatpak")){
                        totalLinux+=asset.download_count;
                    }
                })
            })

            // Create json object with the total number of downloads for each platform
            const totalDownloads = {
                "mac": totalMac,
                "windows": totalWin,
                "linux": totalLinux,
                "all": totalMac + totalWin + totalLinux
            }

            process.env.MAC_DOWNLOADS = totalMac;

            $MAC_DOWNLOADS = totalMac;
            $WINDOWS_DOWNLOADS = totalWin;
            $LINUX_DOWNLOADS = totalLinux;
            $ALL_DOWNLOADS = totalMac + totalWin + totalLinux;

            console.log(totalDownloads);

  publish-downloads-count-segment:
    needs: get-all-releases-count
    runs-on: ubuntu-latest
    steps:
      - name: send-event
        run: |
            echo $MAC_DOWNLOADS
