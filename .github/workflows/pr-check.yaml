#
# Copyright (C) 2022 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: pr-check

on: [pull_request]

jobs:
  windows:
    name: Windows
    runs-on: windows-2022
    timeout-minutes: 60
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> ${env:GITHUB_OUTPUT}

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: yarn
        run: |
          yarn --frozen-lockfile --network-timeout 180000

      - name: Run Build
        timeout-minutes: 20
        run: yarn compile:pull-request

      - name: List Build
        run: ls ./dist/

      - uses: actions/upload-artifact@v3.1.2
        with:
          name: windows-exe
          path: ./dist/podman-desktop*.exe

  linux:
    name: Linux
    runs-on: ubuntu-20.04
    timeout-minutes: 40
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-


      - name: Execute yarn
        run: yarn --frozen-lockfile --network-timeout 180000

      - name: Install flatpak
        run: |
          sudo apt-get update
          sudo apt-get install flatpak -y
          sudo apt-get install flatpak-builder -y
          sudo apt-get install elfutils -y
          flatpak remote-add --if-not-exists flathub --user https://flathub.org/repo/flathub.flatpakrepo
          flatpak install flathub --no-static-deltas --user -y org.freedesktop.Platform//22.08 org.freedesktop.Sdk//22.08

      - name: Run Build
        timeout-minutes: 20
        run: yarn compile:pull-request

      - name: List Build
        run: ls -la ./dist/

      - uses: actions/upload-artifact@v3.1.2
        with:
          name: linux
          path: ./dist/podman-desktop-*.tar.gz

      - uses: actions/upload-artifact@v3.1.2
        with:
          name: flatpak
          path: ./dist/podman-desktop-*.flatpak

  darwin:
    name: macOS
    runs-on: macos-11
    timeout-minutes: 40
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Execute yarn
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        run: yarn --frozen-lockfile --network-timeout 180000

      - name: Run Build
        timeout-minutes: 40
        run: yarn compile:pull-request

      - name: List Build
        run: ls -la ./dist/

      - uses: actions/upload-artifact@v3.1.2
        with:
          name: macos-x64-dmg
          path: ./dist/podman-desktop-*x64.dmg
      - uses: actions/upload-artifact@v3.1.2
        with:
          name: macos-arm64-dmg
          path: ./dist/podman-desktop-*arm64.dmg
      - uses: actions/upload-artifact@v3.1.2
        with:
          name: macos-universal-dmg
          path: ./dist/podman-desktop-*universal.dmg


  lint-format-unit:
    name: linter, formatters and unit tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Execute yarn
        run: yarn --frozen-lockfile

      - name: Run linter
        run: yarn lint:check

      - name: Run formatter
        run: yarn format:check

      - name: Run unit tests
        run: yarn test

      - name: Run typecheck
        run: yarn typecheck

      - name: Run svelte check
        run: yarn svelte:check
